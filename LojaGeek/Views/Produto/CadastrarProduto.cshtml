@model LojaGeek.Model.DB.Model.Produto

@{
    ViewBag.Title = "Cadastrar Novo Produto";
}

<h2 style="text-align:center;">Novo produto</h2>
<div class="center">
    <div>
        @Html.ActionLink("Voltar ao estoque", "Estoque", null, new { @class="btn btn-default"})
    </div>
</div>


<div class="center">
    @using (Html.BeginForm("GravarProduto", "Produto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group space-around-flex">
                <div class="">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group space-around-flex">
                <div class="">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group center">
                <div>
                    @Html.LabelFor(model => model.Plataforma, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Plataforma, new SelectList(new string[] { "Playstation 4", "Playstation 3", "Xbox One", "Xbox 360", "Switch", "Nintendo 3DS" }), new Dictionary<string, object>() { { "class", "form-control" } })
                    @Html.ValidationMessageFor(model => model.Plataforma, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group center">
                <div>
                    @Html.LabelFor(model => model.Estoque, htmlAttributes: new { @class = "control-label col-md-2" })

                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Estoque, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Estoque, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group center">
                <div>
                    @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control", placeholder = "Preço unitário de fábrica" } })
                    @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group center">
                <div>
                    @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control", placeholder = "Peso do produto" } })
                    @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group center">
                <div>
                    <label class = "control-label col-md-2" for="file">Foto</label>
                </div>
                <div class="col-md-10">
                    @Html.TextBox("file", "", new { @type = "file", @class = "form-control" }) <br />
                </div>
            </div>

            <div class="form-group center">
                <div>
                    @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Ativo)
                        @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar Produto" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
